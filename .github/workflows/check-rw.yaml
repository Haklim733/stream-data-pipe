name: check-rw 
on:
  push:
    branches: [ main, master, cicd ]
    paths:
      - '.github/workflows/**'
      - 'docker-compose-rw.yaml'
      - 'services/risingwave/**/*'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'docker-compose-rw.yaml'
      - 'services/risingwave/**/*'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  validate:
    runs-on: ["llee-xps"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for file change detection

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.buildx-cache
          key: ${{ runner.os }}-rw-buildx-${{ hashFiles('docker-compose-rw.yaml', 'services/risingwave/**/*') }}
          restore-keys: |
            ${{ runner.os }}-rw-buildx-

      - name: Build with cache
        run: |
          # Build using Docker Buildx with GitHub Actions cache
          docker buildx bake -f docker-compose-rw.yaml \
            --set *.cache-from=type=local,src=${{ github.workspace }}/.buildx-cache \
            --set *.cache-to=type=local,dest=${{ github.workspace }}/.buildx-cache-new,mode=max
          
          # Update cache for next run (prevents unbounded cache growth)
          rm -rf ${{ github.workspace }}/.buildx-cache
          mv ${{ github.workspace }}/.buildx-cache-new ${{ github.workspace }}/.buildx-cache

      - name: Start services
        run: |
          docker compose -f docker-compose-rw.yaml up -d

      - name: Run RisingWave tests
        run: |
          echo "Running RisingWave tests..."
          sleep 10
          
          docker exec $(docker ps -q --filter name=risingwave) curl -s http://localhost:4566/metrics | grep risingwave
          
          # Example test - run a simple query
          # docker exec risingwave psql -

      - name: Clean up
        if: always()
        run: |
          echo "Cleaning up..."
          docker compose -f docker-compose-rw.yaml down --remove-orphans